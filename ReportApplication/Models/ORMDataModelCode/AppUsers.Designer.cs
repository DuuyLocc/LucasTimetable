//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace ReportApplication.Models.Timetable
{

    public partial class AppUsers : XPLiteObject
    {
        Guid fId;
        [Key(true)]
        public Guid Id
        {
            get { return fId; }
            set { SetPropertyValue<Guid>(nameof(Id), ref fId, value); }
        }
        string fUserName;
        [Size(SizeAttribute.Unlimited)]
        public string UserName
        {
            get { return fUserName; }
            set { SetPropertyValue<string>(nameof(UserName), ref fUserName, value); }
        }
        string fNormalizedUserName;
        [Size(SizeAttribute.Unlimited)]
        public string NormalizedUserName
        {
            get { return fNormalizedUserName; }
            set { SetPropertyValue<string>(nameof(NormalizedUserName), ref fNormalizedUserName, value); }
        }
        string fEmail;
        [Size(SizeAttribute.Unlimited)]
        public string Email
        {
            get { return fEmail; }
            set { SetPropertyValue<string>(nameof(Email), ref fEmail, value); }
        }
        string fNormalizedEmail;
        [Size(SizeAttribute.Unlimited)]
        public string NormalizedEmail
        {
            get { return fNormalizedEmail; }
            set { SetPropertyValue<string>(nameof(NormalizedEmail), ref fNormalizedEmail, value); }
        }
        bool fEmailConfirmed;
        public bool EmailConfirmed
        {
            get { return fEmailConfirmed; }
            set { SetPropertyValue<bool>(nameof(EmailConfirmed), ref fEmailConfirmed, value); }
        }
        string fPasswordHash;
        [Size(SizeAttribute.Unlimited)]
        public string PasswordHash
        {
            get { return fPasswordHash; }
            set { SetPropertyValue<string>(nameof(PasswordHash), ref fPasswordHash, value); }
        }
        string fSecurityStamp;
        [Size(SizeAttribute.Unlimited)]
        public string SecurityStamp
        {
            get { return fSecurityStamp; }
            set { SetPropertyValue<string>(nameof(SecurityStamp), ref fSecurityStamp, value); }
        }
        string fConcurrencyStamp;
        [Size(SizeAttribute.Unlimited)]
        public string ConcurrencyStamp
        {
            get { return fConcurrencyStamp; }
            set { SetPropertyValue<string>(nameof(ConcurrencyStamp), ref fConcurrencyStamp, value); }
        }
        string fPhoneNumber;
        [Size(SizeAttribute.Unlimited)]
        public string PhoneNumber
        {
            get { return fPhoneNumber; }
            set { SetPropertyValue<string>(nameof(PhoneNumber), ref fPhoneNumber, value); }
        }
        bool fPhoneNumberConfirmed;
        public bool PhoneNumberConfirmed
        {
            get { return fPhoneNumberConfirmed; }
            set { SetPropertyValue<bool>(nameof(PhoneNumberConfirmed), ref fPhoneNumberConfirmed, value); }
        }
        bool fTwoFactorEnabled;
        public bool TwoFactorEnabled
        {
            get { return fTwoFactorEnabled; }
            set { SetPropertyValue<bool>(nameof(TwoFactorEnabled), ref fTwoFactorEnabled, value); }
        }
        bool fLockoutEnabled;
        public bool LockoutEnabled
        {
            get { return fLockoutEnabled; }
            set { SetPropertyValue<bool>(nameof(LockoutEnabled), ref fLockoutEnabled, value); }
        }
        int fAccessFailedCount;
        public int AccessFailedCount
        {
            get { return fAccessFailedCount; }
            set { SetPropertyValue<int>(nameof(AccessFailedCount), ref fAccessFailedCount, value); }
        }
        string fHo;
        [Size(50)]
        public string Ho
        {
            get { return fHo; }
            set { SetPropertyValue<string>(nameof(Ho), ref fHo, value); }
        }
        string fTen;
        [Size(50)]
        public string Ten
        {
            get { return fTen; }
            set { SetPropertyValue<string>(nameof(Ten), ref fTen, value); }
        }
        string fHoTen;
        public string HoTen
        {
            get { return fHoTen; }
            set { SetPropertyValue<string>(nameof(HoTen), ref fHoTen, value); }
        }
        DateTime fNgaySinh;
        public DateTime NgaySinh
        {
            get { return fNgaySinh; }
            set { SetPropertyValue<DateTime>(nameof(NgaySinh), ref fNgaySinh, value); }
        }
    }

}
